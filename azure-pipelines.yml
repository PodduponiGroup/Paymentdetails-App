# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
- master # ðŸ‘ˆ replace with your branch name (e.g., master/develop)

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
# 1. Restore NuGet packages
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '9.x'   # ðŸ‘ˆ replace with your .NET version (6.x, 7.x, 8.x)
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '*/.csproj'

# 2. Build the project
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '*/.csproj'
    arguments: '--configuration $(buildConfiguration)'

# # 3. Run tests (if you have test projects)
# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'test'
#     projects: '**/*Tests.csproj'
#     arguments: '--configuration $(buildConfiguration) --no-build --verbosity normal'

# 4. Publish build output (for deployment)
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

# 5. Upload build artifacts
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
